openapi: "3.0.3"
info:
  title: Biblioteca API
  description: API para gerenciar uma lista de livros
  version: 1.0.0

tags:
  - name: Usuario
    description: Operações relacionadas a usuários
  - name: Endereço
    description: Operações relacionadas a endereços
  - name: Unidade Federativa
    description: Operações relacionadas a Unidades Federativas
  - name: Senha
    description: Operações relacionadas a senha de acesso do usuário

paths:
  /usuario/find:
    post:
      summary: Busca usuários
      security:
        - bearerAuth: []
      tags:
        - Usuario
      operationId: findUsuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioRequest'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponseDTO'
  /usuario/detail/{id}:
    get:
      summary: Detalha  um usuário
      security:
        - bearerAuth: []
      tags:
        - Usuario
      operationId: detailUsuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponseDTO'
  /usuario/create:
    put:
      summary: Cria um usuário
      security:
        - bearerAuth: []
      tags:
        - Usuario
      operationId: createUsuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestDTO'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioModel'
  /usuario/update:
    patch:
      summary: Atualiza um usuário
      security:
          - bearerAuth: []
      tags:
        - Usuario
      operationId: updateUsuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioModel'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioModel'
  /usuario/delete/{id}:
    delete:
      summary: Deleta um usuário
      security:
          - bearerAuth: []
      tags:
        - Usuario
      operationId: deleteUsuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
  /senha/recuperar:
    post:
      summary: Gera link de recuperação de senha
      description: Recebe o e-mail do usuário e envia um link de recuperação com token válido por 10 minutos.
      tags:
        - Senha
      operationId: recuperarSenha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@exemplo.com"
      responses:
        '200':
          description: Link de recuperação enviado ao e-mail.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Link de recuperação enviado ao e-mail."
        '404':
          description: Usuário não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Usuário não encontrado."
  /senha/validar-reset-token/{token}:
    get:
      summary: Valida token de recuperação de senha
      description: Valida o token de recuperação de senha e retorna o e-mail do usuário.
      tags:
        - Senha
      operationId: validarResetToken
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
            example: "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ1c3VhcmlvQGV4Y2xlbW8uY29tIiwiZXhwIjoxNjI5MzQwNjY5fQ.1Z6"
      responses:
        '200':
          description: Token válido
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  email:
                    type: string
                    example: "usuario@exemplo.com"
                  nome:
                    type: string
                    example: "Usuário Exemplo"
        '404':
            description: Token inválido
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Token inválido."
  /senha/salvar:
    post:
      summary: Salvar senha do usuário
      description: Recebe o e-mail do usuário e a nova senha.
      tags:
        - Senha
      operationId: salvarSenha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "usuario@exemplo.com"
                senha:
                    type: string
                    example: "novaSenha"
                repeatSenha:
                    type: string
                    example: "novaSenha"
                token:
                    type: string
                    example: "eyJhbGciOi"
      responses:
        '200':
          description: Senha alterada com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Senha alterada com sucesso."
        '404':
          description: Senha não salva.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Senha não salva."
  /unidade-federativa/find:
    post:
      summary: Busca unidades federativas
      security:
        - bearerAuth: []
      tags:
        - Unidade Federativa
      operationId: findUF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnidadeFederativaRequest'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnidadeFederativaResponseDTO'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # Especifica o formato do token, pode ser omitido
  schemas:
    UsuarioRequest:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        dataNascimento:
          type: string
          format: date
        limit:
            type: integer
        offset:
          type: integer
    UnidadeFederativaRequest:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        sigla:
          type: string
        limit:
          type: integer
        offset:
          type: integer

    UsuarioResponseDTO:
      type: object
      properties:
        usuarios:
          type: array
          items:
            $ref: '#/components/schemas/UsuarioModel'
        totalRecords:
          type: integer
    UnidadeFederativaResponseDTO:
      type: object
      properties:
        ufs:
          type: array
          items:
            $ref: '#/components/schemas/UnidadeFederativaModel'
        totalRecords:
          type: integer
    RegisterRequestDTO:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        senha:
          type: string
        dataNascimento:
          type: string
          format: date
        enderecos:
          type: array
          items:
            $ref: '#/components/schemas/EnderecoModel'
        perfis:
          type: array
          items:
            $ref: '#/components/schemas/PerfilModel'
    UsuarioModel:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        senha:
          type: string
        email:
          type: string
        dataNascimento:
          type: string
          format: date
        enderecos:
          type: array
          items:
            $ref: '#/components/schemas/EnderecoModel'
        perfis:
            type: array
            items:
                $ref: '#/components/schemas/PerfilModel'
    EnderecoModel:
      type: object
      properties:
        id:
          type: integer
        logradouro:
          type: string
        numero:
          type: integer
        complemento:
            type: string
        bairro:
          type: string
        cidade:
          type: string
        uf:
          $ref: '#/components/schemas/UnidadeFederativaModel'
        cep:
          type: string
    PerfilModel:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
    UnidadeFederativaModel:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        sigla:
            type: string

